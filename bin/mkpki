#!/bin/bash
#
# Script to create server certificates for ForgeRock platform
#
# Usage: mkpki commonNameBase
#
# Creates a new PKI with a root and issuing CA
# 
# Root and Issuing CA common name will include supplied commonNameBase
# 

USAGE="mkpki commonNameBase"
ISSUERDIR=issuing
base_cn=$1
KEYPASS=Passw0rd
LOGFILE=logs/mkpki.log


if [[ "$base_cn" == "" ]]
then
    echo Usage: $USAGE
    exit 1
fi

INSTALLDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"/..
cd "$INSTALLDIR" || exit 1

date >> $LOGFILE

# Create CA databases

echo Creating CA databases

touch root/db/index.txt
echo 1000 > root/db/serial
touch issuing/db/index.txt
echo 2000 > issuing/db/serial

# Create root CA key and cert

echo Creating root CA

openssl genrsa -aes256 -out root/keys/key.pem -passout pass:$KEYPASS 4096 >> $LOGFILE 2>&1

openssl req  -config root/etc/ca.conf -key root/keys/key.pem -new \
   -x509 -days 7300 -sha256 -extensions v3_ca \
   -out root/cacerts/cert.pem -passin pass:$KEYPASS -subj "/CN=$base_cn Root CA" >> $LOGFILE 2>&1

# For some reason, a P12 created by openssl with no keys cannot be read by keytool (Your keystore contains 0 entries)
# openssl pkcs12 -export -nokeys -in root/cacerts/cert.pem -caname root-ca -out root/cacerts/truststore -passout pass:$KEYPASS >> $LOGFILE 2>&1

keytool -import -keystore root/cacerts/truststore -file root/cacerts/cert.pem -alias root-ca -trustcacerts -noprompt -storepass $KEYPASS >> $LOGFILE 2>&1
echo -n $KEYPASS > root/cacerts/truststore.pin

# Create issuing CA key and cert

echo Creating issuing CA

openssl genrsa -aes256 -out $ISSUERDIR/keys/key.pem -passout pass:$KEYPASS 4096 >> $LOGFILE 2>&1

openssl req -config $ISSUERDIR/etc/ca.conf -new -sha256 \
   -key $ISSUERDIR/keys/key.pem -passin pass:$KEYPASS \
   -out $ISSUERDIR/csr/csr.pem -subj "/CN=$base_cn Issuing CA" >> $LOGFILE 2>&1

openssl ca -config root/etc/ca.conf -extensions v3_intermediate_ca -days 3650 \
   -notext -md sha256 -in $ISSUERDIR/csr/csr.pem \
   -out $ISSUERDIR/cacerts/cert.pem -passin pass:$KEYPASS -batch >> $LOGFILE 2>&1

